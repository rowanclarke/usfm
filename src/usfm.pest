book = { (p | pn | e | en | id | usfm | ide | sys | c)+ }

p = { "\\" ~ p_style ~ p_contents ~ "\n" }
pn = { "\\" ~ pn_style ~ num ~ p_contents ~ "\n" }
e = { "\\" ~ e_type ~ " " ~ e_contents ~ "\n" }
en = { "\\"  ~ en_type ~ num ~ " " ~ e_contents ~ "\n" }
id = { "\\id " ~ code ~ " " ~ e_contents ~ "\n" }
usfm = { "\\usfm " ~ version ~ "\n" }
ide = { "\\ide " ~ encoding ~ "\n" }
sys = { "\\sys " ~ num ~ "\n" }
c = { "\\c " ~ num ~ "\n" }
v = { "\\v " ~ num ~ " " }
em = { "\\" ~ em_type ~ "\n" }

k = { "\\" ~ PUSH(k_style) ~ " " ~ k_contents ~ "\\" ~ POP ~ "*" }
kn = { "\\" ~ PUSH(kn_style) ~ num ~ " " ~ k_contents ~ "\\" ~ POP ~ "*" }

f = { "\\" ~ PUSH(f_style) ~ " " ~ caller ~ " " ~ ("\\fr " ~ ref ~ " ")? ~ f_contents ~ "\\" ~ POP ~ "*" }
x = { "\\" ~ PUSH(x_style) ~ " " ~ caller ~ " " ~ ("\\xo " ~ ref ~ " ")? ~ x_contents ~ "\\" ~ POP ~ "*" }

p_style = { "p" | "m" | "pr" | "pmo" | "pm" | "pmc" | "mi" | "pc" }
pn_style = { "pi" | "ph" | "q" | "qm" }
e_type = { "rem" | "h" | "ip" | "ipi" | "im" | "imi" | "ipq" | "imq" | "ipr" | "ib" | "iot" | "iex" | "ie" | "cl" | "cp" | "cd" | "po" | "cls" | "pmr" | "qr" | "qc" | "qa" | "qd" }
en_type = { "toc" | "toca" | "imt" | "is" | "iq" | "ili" | "io" | "imte" | "mt" | "mte" | "ms" | "s" | "sd" }
em_type = { "nb" | "b" }

k_style = { "ior" | "iqt" |  "vp" | "qs" | "qac" }
kn_style = { "ca" | "va" }

f_style = { "f" | "fe" }
fe_style = { "fq" | "fqa" | "fk" | "fl" | "fw" | "fp" | "ft" | "fdc" | "fm" }
x_style = { "x" }
xe_style = { "xk" | "xq" | "xt" | "xta" | "xop" | "xot" | "xnt" | "xdc" | "rq" }

p_contents = { ("\n" ~ v | k | f | x | line)+ }
e_contents = { (k | f | x | line)+ }
k_contents = { line }
f_contents = { ("\\" ~ PUSH(fe_style) ~ " " ~ line ~ ("\\" ~ PEEK ~ "*")? ~ DROP)+ }
x_contents = { ("\\" ~ PUSH(xe_style) ~ " " ~ line ~ ("\\" ~ PEEK ~ "*")? ~ DROP)+ }

line = { (!("\\" | "\n\\" | "\n" ~ EOI) ~ ANY)+ }
code = { 'A'..'Z'+ }
encoding = { "CP-1252" | "CP-1251" | "UTF-8" | "UTF-16" }
version = { num ~ ("." ~ num)* }
caller = { "+" | "-" | "?" } 
num = { ('0'..'9')+ }
ref = { num ~ sep ~ num }
sep = { ANY }
